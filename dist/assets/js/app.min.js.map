{"version":3,"sources":["app.js"],"names":["angular","module","config","$httpProvider","$locationProvider","ConfigsProvider","defaults","headers","get","X-Auth-Token","getApiKey","value","component","template","controller","CompetitionService","ctrl","this","competitions","$routerOnActivate","getAll","then","$routeConfig","path","name","useAsDefault","templateUrl","controllerAs","$q","$rootRouter","LeagueTableService","filterByMatchDay","matchDay","navigate","id","competition","leagueTable","groups","group","matchDays","next","all","params","Array","apply","length","numberOfMatchdays","map","Number","call","matchday","standing","Object","keys","standings","FixtureService","fixtures","Configs","getApiUrl","_apiUrl_","_apiKey_","setApiUrl","url","setApiKey","key","$get","apiUrl","apiKey","provider","$inject","$http","season","method","response","data","factory","getAllByCompetition","timeFrame","getAllByTeam","venue","league","dto","fixture","_links","href","match","homeTeam","awayTeam","head2head","competitionsId","ele","teamId","team","PlayerService","TeamService","competitionTeams","teams","self","teamPlayers"],"mappings":"AAAA,cAGA,WACIA,QAAQC,OAAO,OAAQ,KAAM,eAAgB,oBAAqB,WAAY,kBAAmB,mBAKrG,WACID,QAAQC,OAAO,OAAOC,QAAQ,gBAAiB,oBAAqB,kBAAmB,SAAUC,EAAeC,EAAmBC,GAE/HF,EAAcG,SAASC,QAAQC,KAAQC,eAAgBJ,EAAgBK,mBAK/E,WACIV,QAAQC,OAAO,OAAOU,MAAM,uBAAwB,OAAOC,UAAU,OACjEC,SAAU,yBACVC,YAAa,qBAAsB,SAAUC,GACzC,GAAIC,GAAOC,IACXD,GAAKE,aAAe,KAEpBF,EAAKG,kBAAoB,WACrB,MAAOJ,GAAmBK,SAASC,KAAK,SAAUH,GAC9CF,EAAKE,aAAeA,OAIhCI,eAAiBC,KAAM,WAAYC,KAAM,kBAAmBZ,UAAW,kBAAmBa,cAAc,IAAUF,KAAM,eAAgBC,KAAM,qBAAsBZ,UAAW,uBAA0BW,KAAM,yBAA0BC,KAAM,0BAA2BZ,UAAW,uBAA0BW,KAAM,qBAAsBC,KAAM,mBAAoBZ,UAAW,aAAgBW,KAAM,aAAcC,KAAM,cAAeZ,UAAW,gBAAmBW,KAAM,WAAYC,KAAM,cAAeZ,UAAW,qBAKjgB,WACIZ,QAAQC,OAAO,UAInB,WACID,QAAQC,OAAO,yBAInBD,QAAQC,OAAO,mBAAmBW,UAAU,sBACxCc,YAAa,uDACbC,aAAc,KACdb,YAAa,KAAM,cAAe,qBAAsB,qBAAsB,SAAUc,EAAIC,EAAad,EAAoBe,GAgCzH,QAASC,GAAiBC,GACtBH,EAAYI,UAAU,2BAA6BC,GAAIlB,EAAKmB,YAAYD,GAAIF,SAAUA,KAhC1F,GAAIhB,GAAOC,IACXD,GAAKmB,YAAc,KACnBnB,EAAKoB,YAAc,KACnBpB,EAAKqB,OAAS,KACdrB,EAAKsB,MAAQ,KACbtB,EAAKgB,SAAW,KAChBhB,EAAKuB,UAAY,KAEjBvB,EAAKe,iBAAmBA,EAExBf,EAAKG,kBAAoB,SAAUqB,GAC/B,MAAOZ,GAAGa,KAAK1B,EAAmBP,IAAIgC,EAAKE,OAAOR,IAAIb,KAAK,SAAUc,GAEjE,MADAnB,GAAKmB,YAAcA,EACZA,IACRd,KAAK,SAAUc,GAEd,MADAnB,GAAKuB,UAAYI,MAAMC,MAAM,MAAQC,OAAQV,EAAYW,oBAAqBC,IAAIC,OAAOC,KAAMD,QACxFb,IACPL,EAAmBtB,IAAIgC,EAAKE,OAAOR,GAAIM,EAAKE,OAAOV,UAAUX,KAAK,SAAUe,GAE5E,MADApB,GAAKoB,YAAcA,EACZA,IACRf,KAAK,SAAUe,GAEd,MADApB,GAAKgB,UAAYI,EAAYc,SACtBd,IACRf,KAAK,SAAUe,GAEd,MADApB,GAAKqB,OAASD,EAAYe,cAAkBC,OAAOC,KAAKjB,EAAYkB,WAC7DtC,EAAKqB,SACbhB,KAAK,SAAUgB,GACd,MAAOrB,GAAKsB,MAAQtB,EAAKqB,OAAO,IAAM,YAQlDf,kBAGJtB,QAAQC,OAAO,mBAAmBW,UAAU,mBACxCc,YAAa,iDACbC,aAAc,KACdb,YAAa,qBAAsB,SAAUC,GACzC,GAAIC,GAAOC,IACXD,GAAKE,aAAe,KAEpBF,EAAKG,kBAAoB,WACrB,MAAOJ,GAAmBK,SAASC,KAAK,SAAUH,GAC9CF,EAAKE,aAAeA,SAMpC,WACIlB,QAAQC,OAAO,qBAInBD,QAAQC,OAAO,eAAeW,UAAU,eACpCc,YAAa,yCACbC,aAAc,KACdb,YAAa,iBAAkB,SAAUyC,GACrC,GAAIvC,GAAOC,IACXD,GAAKwC,SAAW,KAEhBxC,EAAKG,kBAAoB,SAAUqB,GAC/B,MAAOe,GAAenC,OAAOoB,EAAKE,OAAOR,IAAIb,KAAK,SAAUmC,GACxDxC,EAAKwC,SAAWA,SAMhC,WAII,QAASC,KA2BL,QAASC,KACL,MAAOC,GAQX,QAASjD,KACL,MAAOkD,GAQX,QAASC,GAAUC,GACfH,EAAWG,EAQf,QAASC,GAAUC,GACfJ,EAAWI,EArDf,GAAIL,GAAW,gCACXC,EAAW,kCAEf,QACIC,UAAWA,EACXH,UAAWA,EACXK,UAAWA,EACXrD,UAAWA,EACXuD,KAAM,WACF,OACIC,GAAIA,UACA,MAAOP,IAEXQ,GAAIA,UACA,MAAOP,OAnB3B5D,QAAQC,OAAO,OAAOmE,SAAS,UAAWX,GAE1CA,EAAQY,cA8DZ,WAII,QAAStD,GAAmBuD,EAAOb,GAW/B,QAASrC,GAAOmD,GACZ,MAAOD,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,oBACtBxB,QACI6B,OAAQA,KAEblD,KAAK,SAAUoD,GACd,MAAOA,GAASC,OASxB,QAASlE,GAAI0B,GACT,MAAOoC,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,oBAAsBhC,IAC7Cb,KAAK,SAAUoD,GACd,MAAOA,GAASC,OAhCxB,OACItD,OAAQA,EACRZ,IAAKA,GANbR,QAAQC,OAAO,OAAO0E,QAAQ,qBAAsB5D,GAEpDA,EAAmBsD,SAAW,QAAS,cAyC3C,WAII,QAASd,GAAee,EAAOb,GAgB3B,QAASmB,GAAoB1C,EAAI2C,EAAW3B,GACxC,MAAOoB,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,oBAAsBhC,EAAK,YACjDQ,QACImC,UAAWA,EACX3B,SAAUA,KAEf7B,KAAK,SAAUoD,GACd,MAAOA,GAASC,OAYxB,QAASI,GAAa5C,EAAI2C,EAAWN,EAAQQ,GACzC,MAAOT,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,aAAehC,EAAK,aAC1CQ,QACImC,UAAWA,EACXN,OAAQA,EACRQ,MAAOA,KAEZ1D,KAAK,SAAUoD,GACd,MAAOA,GAASC,OASxB,QAAStD,GAAOyD,EAAWG,GACvB,MAAOV,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,gBACtBxB,QACImC,UAAWA,EACXG,OAAQA,KAEb3D,KAAK,SAAUoD,GACd,MAAOA,GAASC,OACjBrD,KAAK,SAAU4D,GAQd,MAPAA,GAAIzB,SAAWyB,EAAIzB,SAAST,IAAI,SAAUmC,GAItC,MAHAA,GAAQ/C,aAAe+C,EAAQC,OAAOhD,YAAYiD,KAAKC,MAAM,WAAW,GACxEH,EAAQI,UAAYJ,EAAQC,OAAOG,SAASF,KAAKC,MAAM,WAAW,GAClEH,EAAQK,UAAYL,EAAQC,OAAOI,SAASH,KAAKC,MAAM,WAAW,GAC3DH,IAGJD,IAUf,QAASzE,GAAI0B,EAAIsD,GACb,MAAOlB,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,gBAAkBhC,EACxCQ,QACI8C,UAAWA,KAEhBnE,KAAK,SAAUoD,GACd,MAAOA,GAASC,OA1FxB,OACItD,OAAQA,EACRwD,oBAAqBA,EACrBE,aAAcA,EACdtE,IAAKA,GATbR,QAAQC,OAAO,OAAO0E,QAAQ,iBAAkBpB,GAEhDA,EAAec,SAAW,QAAS,cAoGvC,WAII,QAASvC,GAAmBwC,EAAOb,GAW/B,QAASjD,GAAIiF,EAAgBvC,GACzB,MAAOoB,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,oBAAsBuB,EAAiB,eAC7D/C,QACIQ,SAAUA,KAEf7B,KAAK,SAAUoD,GACd,MAAOA,GAASC,OACjBrD,KAAK,SAAUe,GAOd,MANIA,GAAYe,WACZf,EAAYe,SAAWf,EAAYe,SAASJ,IAAI,SAAU2C,GAEtD,MADAA,GAAIC,QAAUD,EAAIP,OAAOS,KAAKR,KAAKC,MAAM,WAAW,GAC7CK,KAGRtD,IA1Bf,OACI5B,IAAKA,GALbR,QAAQC,OAAO,OAAO0E,QAAQ,qBAAsB7C,GAEpDA,EAAmBuC,SAAW,QAAS,cAmC3C,WAII,QAASwB,GAAcvB,EAAOb,GAU1B,QAASqB,GAAa5C,GAClB,MAAOoC,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,aAAehC,EAAK,aAC3Cb,KAAK,SAAUoD,GACd,MAAOA,GAASC,OAdxB,OACII,aAAcA,GALtB9E,QAAQC,OAAO,OAAO0E,QAAQ,gBAAiBkB,GAE/CA,EAAcxB,SAAW,QAAS,cAuBtC,WAII,QAASyB,GAAYxB,EAAOb,GAWxB,QAASmB,GAAoB1C,GACzB,MAAOoC,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,oBAAsBhC,EAAK,WAClDb,KAAK,SAAUoD,GACd,MAAOA,GAASC,OACjBrD,KAAK,SAAU0E,GAOd,MALAA,GAAiBC,MAAQD,EAAiBC,MAAMjD,IAAI,SAAU6C,GAE1D,MADAA,GAAKD,QAAUC,EAAKT,OAAOc,KAAKb,KAAKC,MAAM,WAAW,GAC/CO,IAGJG,IASf,QAASvF,GAAI0B,GACT,MAAOoC,IACHE,OAAQ,MACRV,IAAKL,EAAQS,OAAS,aAAehC,IACtCb,KAAK,SAAUoD,GACd,MAAOA,GAASC,OArCxB,OACIE,oBAAqBA,EACrBpE,IAAKA,GANbR,QAAQC,OAAO,OAAO0E,QAAQ,cAAemB,GAE7CA,EAAYzB,SAAW,QAAS,cA8CpC,WACIrE,QAAQC,OAAO,kBAInBD,QAAQC,OAAO,YAAYW,UAAU,eACjCc,YAAa,yCACbC,aAAc,KACdb,YAAa,KAAM,cAAe,cAAe,gBAAiB,SAAUc,EAAIC,EAAaiE,EAAaD,GACtG,GAAI7E,GAAOC,IAEXD,GAAK4E,KAAO,KACZ5E,EAAKkF,YAAc,KAEnBlF,EAAKG,kBAAoB,SAAUqB,GAC/B,MAAOZ,GAAGa,KAAKqD,EAAYtF,IAAIgC,EAAKE,OAAOR,IAAIb,KAAK,SAAUuE,GAE1D,MADA5E,GAAK4E,KAAOA,EACLA,IACPC,EAAcf,aAAatC,EAAKE,OAAOR,IAAIb,KAAK,SAAU6E,GAE1D,MADAlF,GAAKkF,YAAcA,EACZA,SAInB5E,kBAGJtB,QAAQC,OAAO,YAAYW,UAAU,YACjCc,YAAa,mCACbC,aAAc,KACdb,YAAa,cAAe,SAAUgF,GAClC,GAAI9E,GAAOC,IACXD,GAAKgF,MAAQ,KAEbhF,EAAKG,kBAAoB,SAAUqB,GAC/B,MAAOsD,GAAYlB,oBAAoBpC,EAAKE,OAAOR,IAAIb,KAAK,SAAU2E,GAClEhF,EAAKgF,MAAQA","file":"app.min.js","sourcesContent":["'use strict';\n// Source: src/app/app.js\n\n(function () {\n    angular.module('app', ['ng', 'ui.bootstrap', 'ngComponentRouter', 'app.team', 'app.competition', 'app.fixture']);\n})();\n\n// Source: src/app/appConf.js\n\n(function () {\n    angular.module('app').config(['$httpProvider', '$locationProvider', 'ConfigsProvider', function ($httpProvider, $locationProvider, ConfigsProvider) {\n        //$locationProvider.html5Mode(true);\n        $httpProvider.defaults.headers.get = { 'X-Auth-Token': ConfigsProvider.getApiKey() };\n    }]);\n})();\n\n// Source: src/app/appRoutes.js\n(function () {\n    angular.module('app').value('$routerRootComponent', 'app').component('app', {\n        template: '<ng-outlet><ng-outlet>',\n        controller: ['CompetitionService', function (CompetitionService) {\n            var ctrl = this;\n            ctrl.competitions = null;\n\n            ctrl.$routerOnActivate = function () {\n                return CompetitionService.getAll().then(function (competitions) {\n                    ctrl.competitions = competitions;\n                });\n            };\n        }],\n        $routeConfig: [{ path: '/leagues', name: \"CompetitionList\", component: 'competitionList', useAsDefault: true }, { path: '/leagues/:id', name: \"CompetitionDetails\", component: 'competitionDetails' }, { path: '/leagues/:id/:matchDay', name: \"CompetitionDetailsbyDay\", component: 'competitionDetails' }, { path: '/leagues/:id/teams', name: \"CompetitionTeams\", component: 'teamList' }, { path: '/teams/:id', name: \"TeamDetails\", component: 'teamDetails' }, { path: '/fixture', name: \"FixtureList\", component: 'fixtureList' }]\n    });\n})();\n\n// Source: src/app/appRun.js\n(function () {\n    angular.module('app');\n})();\n\n// Source: src/app/competition/competition.js\n(function () {\n    angular.module('app.competition', []);\n})();\n\n// Source: src/app/competition/detailsView/competition.detailsComponent.js\nangular.module('app.competition').component('competitionDetails', {\n    templateUrl: 'app/competition/detailsView/competition.details.html',\n    controllerAs: \"vm\",\n    controller: [\"$q\", '$rootRouter', 'CompetitionService', 'LeagueTableService', function ($q, $rootRouter, CompetitionService, LeagueTableService) {\n        var ctrl = this;\n        ctrl.competition = null;\n        ctrl.leagueTable = null;\n        ctrl.groups = null;\n        ctrl.group = null;\n        ctrl.matchDay = null;\n        ctrl.matchDays = null;\n\n        ctrl.filterByMatchDay = filterByMatchDay;\n\n        ctrl.$routerOnActivate = function (next) {\n            return $q.all([CompetitionService.get(next.params.id).then(function (competition) {\n                ctrl.competition = competition;\n                return competition;\n            }).then(function (competition) {\n                ctrl.matchDays = Array.apply(null, { length: competition.numberOfMatchdays }).map(Number.call, Number);\n                return competition;\n            }), LeagueTableService.get(next.params.id, next.params.matchDay).then(function (leagueTable) {\n                ctrl.leagueTable = leagueTable;\n                return leagueTable;\n            }).then(function (leagueTable) {\n                ctrl.matchDay = +leagueTable.matchday;\n                return leagueTable;\n            }).then(function (leagueTable) {\n                ctrl.groups = leagueTable.standing && [] || Object.keys(leagueTable.standings);\n                return ctrl.groups;\n            }).then(function (groups) {\n                return ctrl.group = ctrl.groups[0] || null;\n            })]);\n        };\n\n        function filterByMatchDay(matchDay) {\n            $rootRouter.navigate(['CompetitionDetailsbyDay', { id: ctrl.competition.id, matchDay: matchDay }]);\n        }\n    }],\n    $routeConfig: []\n});\n// Source: src/app/competition/listView/competition.listComponent.js\nangular.module('app.competition').component('competitionList', {\n    templateUrl: 'app/competition/listView/competition.list.html',\n    controllerAs: \"vm\",\n    controller: ['CompetitionService', function (CompetitionService) {\n        var ctrl = this;\n        ctrl.competitions = null;\n\n        ctrl.$routerOnActivate = function () {\n            return CompetitionService.getAll().then(function (competitions) {\n                ctrl.competitions = competitions;\n            });\n        };\n    }]\n});\n// Source: src/app/fixture/fixture.js\n(function () {\n    angular.module('app.fixture', []);\n})();\n\n// Source: src/app/fixture/listView/fixture.listComponent.js\nangular.module('app.fixture').component('fixtureList', {\n    templateUrl: 'app/fixture/listView/fixture.list.html',\n    controllerAs: \"vm\",\n    controller: ['FixtureService', function (FixtureService) {\n        var ctrl = this;\n        ctrl.fixtures = null;\n\n        ctrl.$routerOnActivate = function (next) {\n            return FixtureService.getAll(next.params.id).then(function (fixtures) {\n                ctrl.fixtures = fixtures;\n            });\n        };\n    }]\n});\n// Source: src/app/providers/ConfigsProvider.js\n(function () {\n    angular.module(\"app\").provider(\"Configs\", Configs);\n\n    Configs.$inject = [];\n    function Configs() {\n\n        var _apiUrl_ = \"http://api.football-data.org/\";\n        var _apiKey_ = \"293eb02126bd4780b14c49af3ff7c4a0\";\n\n        return {\n            setApiUrl: setApiUrl,\n            getApiUrl: getApiUrl,\n            setApiKey: setApiKey,\n            getApiKey: getApiKey,\n            $get: function $get() {\n                return {\n                    get apiUrl() {\n                        return _apiUrl_;\n                    },\n                    get apiKey() {\n                        return _apiKey_;\n                    }\n                };\n            }\n        };\n\n        /**\r\n         * Get api url\r\n         *\r\n         * @returns {String}\r\n         */\n        function getApiUrl() {\n            return _apiUrl_;\n        }\n\n        /**\r\n         * Get api key\r\n         *\r\n         * @returns {String}\r\n         */\n        function getApiKey() {\n            return _apiKey_;\n        }\n\n        /**\r\n         * Set the url for the Api url\r\n         *\r\n         * @param {String} url\r\n         */\n        function setApiUrl(url) {\n            _apiUrl_ = url;\n        }\n\n        /**\r\n         * Set the url for the Api key\r\n         *\r\n         * @param {String} key\r\n         */\n        function setApiKey(key) {\n            _apiKey_ = key;\n        }\n    }\n})();\n\n// Source: src/app/services/CompetitionService.js\n(function () {\n    angular.module('app').factory('CompetitionService', CompetitionService);\n\n    CompetitionService.$inject = [\"$http\", 'Configs'];\n    function CompetitionService($http, Configs) {\n        return {\n            getAll: getAll,\n            get: get\n        };\n\n        /**\r\n         *\r\n         * @param {String} [season] Season of the competition (format:/d/d/d/d)\r\n         * @returns Promise<Array<Object>> Returns a promise containing the list of competitions\r\n         */\n        function getAll(season) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/competitions/',\n                params: {\n                    season: season\n                }\n            }).then(function (response) {\n                return response.data;\n            });\n        }\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the competition\r\n         * @returns Promise<Object> Returns a promise containing a competition\r\n         */\n        function get(id) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/competitions/' + id\n            }).then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n// Source: src/app/services/FixtureService.js\n(function () {\n    angular.module('app').factory('FixtureService', FixtureService);\n\n    FixtureService.$inject = ['$http', 'Configs'];\n    function FixtureService($http, Configs) {\n\n        return {\n            getAll: getAll,\n            getAllByCompetition: getAllByCompetition,\n            getAllByTeam: getAllByTeam,\n            get: get\n        };\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the competition\r\n         * @param {String} [timeFrame] Sets the distance from the current day to fetch fixtures max n|p0-99\r\n         * @param {String} [matchday] Day the match happen (format:d+)\r\n         * @returns Promise<Array<Object>> Returns a promise containing the list of competitions\r\n         */\n        function getAllByCompetition(id, timeFrame, matchday) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/competitions/' + id + '/fixtures',\n                params: {\n                    timeFrame: timeFrame,\n                    matchday: matchday\n                }\n            }).then(function (response) {\n                return response.data;\n            });;\n        }\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the team\r\n         * @param {String} [timeFrame] Sets the distance from the current day to fetch fixtures max n|p0-99\r\n         * @param {String} [season] Season of the competition (format:/d/d/d/d)\r\n         * @param {String} [venue] Defines the venue of a fixture. Default is unset and means to return all fixtures. (format:home|away)\r\n         * @returns Promise<Array<Object>> Returns a promise containing the list of competitions\r\n         */\n        function getAllByTeam(id, timeFrame, season, venue) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/teams/' + id + '/fixtures/',\n                params: {\n                    timeFrame: timeFrame,\n                    season: season,\n                    venue: venue\n                }\n            }).then(function (response) {\n                return response.data;\n            });\n        }\n        /**\r\n         *\r\n         * @param {String} [timeFrame] Sets the distance from the current day to fetch fixtures\r\n         * @param {String} [league] league-codes (format:[\\w\\d]{2,4}(,[\\w\\d]{2,4})*)\r\n         * @returns Promise<Array<Object>> Returns a promise containing the list of competitions\r\n         */\n        function getAll(timeFrame, league) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/fixtures/',\n                params: {\n                    timeFrame: timeFrame,\n                    league: league\n                }\n            }).then(function (response) {\n                return response.data;\n            }).then(function (dto) {\n                dto.fixtures = dto.fixtures.map(function (fixture) {\n                    fixture.competition = +fixture._links.competition.href.match(/\\/(\\d+)/)[1];\n                    fixture.homeTeam = +fixture._links.homeTeam.href.match(/\\/(\\d+)/)[1];\n                    fixture.awayTeam = +fixture._links.awayTeam.href.match(/\\/(\\d+)/)[1];\n                    return fixture;\n                });\n\n                return dto;\n            });\n        }\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the fixture\r\n         * @param {Number} head2head Define the the number of former games to be analyzed in the head2head node. Defaults to 10.\r\n         * @returns Promise<Object> Returns a promise containing a competition\r\n         */\n        function get(id, head2head) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/fixtures/' + id,\n                params: {\n                    head2head: head2head\n                }\n            }).then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n// Source: src/app/services/LeagueTableService.js\n(function () {\n    angular.module('app').factory(\"LeagueTableService\", LeagueTableService);\n\n    LeagueTableService.$inject = ['$http', 'Configs'];\n    function LeagueTableService($http, Configs) {\n        return {\n            get: get\n        };\n\n        /**\r\n         *\r\n         * @param {Number} competitionsId Id of the competition\r\n         * @param {String} [matchday] Day the match happen (format:d+)\r\n         * @returns Promise<Object> Returns a promise containing a LeagueTable\r\n         */\n        function get(competitionsId, matchday) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/competitions/' + competitionsId + '/leagueTable',\n                params: {\n                    matchday: matchday\n                }\n            }).then(function (response) {\n                return response.data;\n            }).then(function (leagueTable) {\n                if (leagueTable.standing) {\n                    leagueTable.standing = leagueTable.standing.map(function (ele) {\n                        ele.teamId = +ele._links.team.href.match(/\\/(\\d+)/)[1];\n                        return ele;\n                    });\n                }\n                return leagueTable;\n            });\n        }\n    }\n})();\n\n// Source: src/app/services/PlayerService.js\n(function () {\n    angular.module('app').factory(\"PlayerService\", PlayerService);\n\n    PlayerService.$inject = ['$http', 'Configs'];\n    function PlayerService($http, Configs) {\n        return {\n            getAllByTeam: getAllByTeam\n        };\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the team\r\n         * @returns Promise<Array<Object>> Returns a promise containing the list of players\r\n         */\n        function getAllByTeam(id) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/teams/' + id + '/players'\n            }).then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n// Source: src/app/services/TeamService.js\n(function () {\n    angular.module('app').factory(\"TeamService\", TeamService);\n\n    TeamService.$inject = ['$http', 'Configs'];\n    function TeamService($http, Configs) {\n        return {\n            getAllByCompetition: getAllByCompetition,\n            get: get\n        };\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the competition\r\n         * @returns Promise<Array<Object>> Returns a promise containing the list of Teams\r\n         */\n        function getAllByCompetition(id) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/competitions/' + id + '/teams'\n            }).then(function (response) {\n                return response.data;\n            }).then(function (competitionTeams) {\n\n                competitionTeams.teams = competitionTeams.teams.map(function (team) {\n                    team.teamId = +team._links.self.href.match(/\\/(\\d+)/)[1];\n                    return team;\n                });\n\n                return competitionTeams;\n            });\n        }\n\n        /**\r\n         *\r\n         * @param {Number} id Id of the team\r\n         * @returns Promise<Object> Returns a promise containing a team\r\n         */\n        function get(id) {\n            return $http({\n                method: \"GET\",\n                url: Configs.apiUrl + '/v1/teams/' + id\n            }).then(function (response) {\n                return response.data;\n            });\n        }\n    }\n})();\n\n// Source: src/app/team/team.js\n(function () {\n    angular.module('app.team', []);\n})();\n\n// Source: src/app/team/detailsView/team.detailsComponent.js\nangular.module('app.team').component('teamDetails', {\n    templateUrl: 'app/team/detailsView/team.details.html',\n    controllerAs: \"vm\",\n    controller: [\"$q\", '$rootRouter', 'TeamService', 'PlayerService', function ($q, $rootRouter, TeamService, PlayerService) {\n        var ctrl = this;\n\n        ctrl.team = null;\n        ctrl.teamPlayers = null;\n\n        ctrl.$routerOnActivate = function (next) {\n            return $q.all([TeamService.get(next.params.id).then(function (team) {\n                ctrl.team = team;\n                return team;\n            }), PlayerService.getAllByTeam(next.params.id).then(function (teamPlayers) {\n                ctrl.teamPlayers = teamPlayers;\n                return teamPlayers;\n            })]);\n        };\n    }],\n    $routeConfig: []\n});\n// Source: src/app/team/listView/team.listComponent.js\nangular.module('app.team').component('teamList', {\n    templateUrl: 'app/team/listView/team.list.html',\n    controllerAs: \"vm\",\n    controller: ['TeamService', function (TeamService) {\n        var ctrl = this;\n        ctrl.teams = null;\n\n        ctrl.$routerOnActivate = function (next) {\n            return TeamService.getAllByCompetition(next.params.id).then(function (teams) {\n                ctrl.teams = teams;\n            });\n        };\n    }]\n});\n//# sourceMappingURL=app.js.map\n//# sourceMappingURL=app.js.map\n"]}